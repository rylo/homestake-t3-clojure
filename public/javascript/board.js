// Generated by CoffeeScript 1.6.2
(function() {
  var Board, BoardView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Board = Board = (function() {
    var _ref;

    function Board() {}

    Board = (function(_super) {
      __extends(Board, _super);

      function Board() {
        _ref = Board.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Board.prototype.defaults = {
        urlRoot: '/game',
        spaces: [null, null, null, null, null, null, null, null, null]
      };

      Board.prototype.fetch = function() {
        return this.parse($.ajax('/json/', {
          type: 'GET',
          dataType: 'html',
          error: function(jqXHR, textStatus, errorThrown) {
            return "error";
          },
          success: function(data, textStatus, jqXHR) {
            console.log($.parseJSON(data));
            console.log(data);
            
            return data;
          }
        }));
      };

      Board.prototype.parse = function(response) {
        console.log("HULLO?");
        return response.responseText;
      };

      Board.prototype.url = function() {
        return '/json/';
      };

      return Board;

    })(Backbone.Model);

    return Board;

  })();

  window.BoardView = BoardView = (function() {
    var _ref;

    function BoardView() {}

    BoardView = (function(_super) {
      __extends(BoardView, _super);

      function BoardView() {
        _ref = BoardView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      BoardView.prototype.el = '#board';

      BoardView.prototype.renderSpaces = function() {
        var space, spaces;

        return spaces = (function() {
          var _results;

          _results = [];
          for (space in this.model.get('spaces')) {
            _results.push("<div id=\"" + space + "\"></div>");
          }
          return _results;
        }).call(this);
      };

      BoardView.prototype.render = function() {
        var html;

        html = this.renderSpaces();
        return $(this.el).html(html);
      };

      return BoardView;

    })(Backbone.View);

    return BoardView;

  })();

}).call(this);
